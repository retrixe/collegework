- load initial time as 11 59 59 in register bank 2
- INTERRUPT HANDLER: increment time by 10ms and display time to LCD in 12 hour
- increment source of randomness
- if alarm time, and currently not alarm, then clear register bank 0 and jump to alarm routine
- jump to routine of mode in R1 register (default, set alarm, set alarm#, set time, alarm)

default mode routine (00h):
- display options on second line of LCD
<space>Alarm:1 Time:2<space>
- poll keypad until 1 or 2 is pressed, then go to set alarm or set time routine

set alarm mode routine (01h):
- display current alarms (24 hour time) stored in register bank 2
1(##:##)2(##:##)
- poll keypad until 1 or 2 is pressed, then go to set alarm# mode

set alarm# mode routine (02h):
- display the following
Set alarm # time
- check if counter of accepted digit is 4, if so, jump to 3
- poll keypad, if digit entered, increment counter and save it in R2+R3, jump to 1
- set alarm in register bank 2
- LCALL defaultmodereset

set time mode routine (03h):
- display the following
<space>Enter new time<space>
- check if counter of accepted digit is 6, if so, jump to 3
- poll keypad, if digit entered, increment counter and save it in R2+R3+R4, jump to 1
- set time in register bank 2
- LCALL defaultmodereset

alarm routine (03h):
- check if R2 holds problem question, if so, jump to 4
- store random number, as well as its answer and set buzzer to ON
- show on LCD second line question
<space>Enter ans: #^2<space>
- check if accepted digit matches, if so, jump to 6
- poll keypad, if digit entered, save it in R3 with left shift and add, jump to 4
- set buzzer OFF
- LCALL defaultmodereset

poll keypad function:
- go through entire keypad, see activated key
- store value in R6
- if R6 is zero and not equal to R7, return
- else, copy R6 to R7, and continue to poll

reset to default function:
- pop stack twice to clear return
- clear register bank 0
- jump to default mode routine
